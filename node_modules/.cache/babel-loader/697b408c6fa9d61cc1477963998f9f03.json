{"ast":null,"code":"var _jsxFileName = \"/home/leandro/Projects/react-app-2/src/components/ProductTableFooter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ProductTableFooter(props) {\n  const count = props.count;\n  const page = props.page;\n  const pageSize = props.pageSize;\n  const onPageChange = props.onPageChange;\n  let pagesArray = [];\n\n  for (let i = 0; i < Math.ceil(count / pageSize); i++) {\n    let color = \"black\";\n\n    if (i + 1 === page) {\n      color = \"red\";\n    }\n\n    if (i < 3) {\n      pagesArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: color\n        },\n        onClick: e => onPageChange(i + 1),\n        children: [\" \", i + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this));\n    }\n  }\n\n  pagesArray.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: color\n      },\n      onClick: e => onPageChange(pagesArray.length + 1),\n      children: [\" \", pagesArray.length + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pagesArray\n  }, void 0, false);\n}\n_c = ProductTableFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTableFooter\");","map":{"version":3,"names":["ProductTableFooter","props","count","page","pageSize","onPageChange","pagesArray","i","Math","ceil","color","push","e","length"],"sources":["/home/leandro/Projects/react-app-2/src/components/ProductTableFooter.js"],"sourcesContent":["export function ProductTableFooter(props) {\n    const count = props.count\n    const page = props.page\n    const pageSize = props.pageSize\n    const onPageChange = props.onPageChange\n\n    let pagesArray = []\n    for (let i = 0; i < Math.ceil(count / pageSize); i++) {\n        let color = \"black\"\n        if (i + 1 === page) {\n            color = \"red\"\n        }\n        if (i < 3) {\n            pagesArray.push(\n                <span\n                    style={{ color: color }}\n                    onClick={e => onPageChange(i + 1)}> {i + 1}\n                </span>\n            )\n        }\n    }\n\n    pagesArray.push(\n        <>\n            <span>...</span>\n            <span\n                style={{ color: color }}\n                onClick={e => onPageChange(pagesArray.length + 1)}> {pagesArray.length + 1}\n            </span>\n        </>\n    )\n\n\n\n\n    return (\n        <>\n            {pagesArray}\n        </>\n    )\n}"],"mappings":";;;AAAA,OAAO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;EACtC,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;EACA,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;EACA,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;EACA,MAAMC,YAAY,GAAGJ,KAAK,CAACI,YAA3B;EAEA,IAAIC,UAAU,GAAG,EAAjB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUP,KAAK,GAAGE,QAAlB,CAApB,EAAiDG,CAAC,EAAlD,EAAsD;IAClD,IAAIG,KAAK,GAAG,OAAZ;;IACA,IAAIH,CAAC,GAAG,CAAJ,KAAUJ,IAAd,EAAoB;MAChBO,KAAK,GAAG,KAAR;IACH;;IACD,IAAIH,CAAC,GAAG,CAAR,EAAW;MACPD,UAAU,CAACK,IAAX,eACI;QACI,KAAK,EAAE;UAAED,KAAK,EAAEA;QAAT,CADX;QAEI,OAAO,EAAEE,CAAC,IAAIP,YAAY,CAACE,CAAC,GAAG,CAAL,CAF9B;QAAA,gBAEyCA,CAAC,GAAG,CAF7C;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAMH;EACJ;;EAEDD,UAAU,CAACK,IAAX,eACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MACI,KAAK,EAAE;QAAED,KAAK,EAAEA;MAAT,CADX;MAEI,OAAO,EAAEE,CAAC,IAAIP,YAAY,CAACC,UAAU,CAACO,MAAX,GAAoB,CAArB,CAF9B;MAAA,gBAEyDP,UAAU,CAACO,MAAX,GAAoB,CAF7E;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;EAaA,oBACI;IAAA,UACKP;EADL,iBADJ;AAKH;KAxCeN,kB"},"metadata":{},"sourceType":"module"}