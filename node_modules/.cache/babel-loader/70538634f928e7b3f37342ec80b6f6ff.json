{"ast":null,"code":"var _jsxFileName = \"/home/leandro/Projects/react-app-2/src/components/ProductTableFooter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ProductTableFooter(props) {\n  const count = props.count;\n  const page = props.page;\n  const pageSize = props.pageSize;\n  const onPageChange = props.onPageChange;\n  let pagesArray = [];\n  let color = \"black\";\n  pagesArray.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: page == 1 ? \"red\" : \"black\"\n      },\n      onClick: e => onPageChange(1),\n      children: [\" \", 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), page - 2 > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true));\n  let numberOfPages = Math.ceil(count / pageSize);\n\n  for (let i = page - 2; i < numberOfPages; i++) {\n    if (i < 1) {\n      continue;\n    }\n\n    let color = \"black\";\n\n    if (i + 1 === page) {\n      color = \"red\";\n    }\n\n    if (i < page + 1) {\n      pagesArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: color\n        },\n        onClick: e => onPageChange(i + 1),\n        children: [\" \", i + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this));\n    }\n  }\n\n  if (numberOfPages > pagesArray.length && page + 2 <= numberOfPages) {\n    let color = \"black\";\n\n    if (numberOfPages === page) {\n      color = \"red\";\n    }\n\n    pagesArray.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [page + 2 < numberOfPages && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: color\n        },\n        onClick: e => onPageChange(numberOfPages),\n        children: [\" \", numberOfPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pagesArray\n  }, void 0, false);\n}\n_c = ProductTableFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductTableFooter\");","map":{"version":3,"names":["ProductTableFooter","props","count","page","pageSize","onPageChange","pagesArray","color","push","e","numberOfPages","Math","ceil","i","length"],"sources":["/home/leandro/Projects/react-app-2/src/components/ProductTableFooter.js"],"sourcesContent":["export function ProductTableFooter(props) {\n    const count = props.count\n    const page = props.page\n    const pageSize = props.pageSize\n    const onPageChange = props.onPageChange\n\n    let pagesArray = []\n    let color = \"black\"\n\n    pagesArray.push(\n        <>\n            <span\n                style={{ color: page == 1 ? \"red\" : \"black\" }}\n                onClick={e => onPageChange(1)}> {1}\n            </span>\n            {page - 2 > 1 && <span>...</span>}\n        </>\n    )\n\n    let numberOfPages = Math.ceil(count / pageSize)\n    for (let i = page - 2; i < numberOfPages; i++) {\n        if (i < 1) {\n            continue\n        }\n        let color = \"black\"\n        if (i + 1 === page) {\n            color = \"red\"\n        }\n        if (i < page + 1) {\n            pagesArray.push(\n                <span\n                    style={{ color: color }}\n                    onClick={e => onPageChange(i + 1)}> {i + 1}\n                </span>\n            )\n        }\n    }\n\n\n    if (numberOfPages > pagesArray.length && page + 2 <= numberOfPages) {\n        let color = \"black\"\n        if (numberOfPages === page) {\n            color = \"red\"\n        }\n        pagesArray.push(\n            <>\n                {page + 2 < numberOfPages && <span>...</span>}\n                <span\n                    style={{ color: color }}\n                    onClick={e => onPageChange(numberOfPages)}> {numberOfPages}\n                </span>\n            </>\n        )\n    }\n\n\n\n\n    return (\n        <>\n            {pagesArray}\n        </>\n    )\n}"],"mappings":";;;AAAA,OAAO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;EACtC,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;EACA,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;EACA,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;EACA,MAAMC,YAAY,GAAGJ,KAAK,CAACI,YAA3B;EAEA,IAAIC,UAAU,GAAG,EAAjB;EACA,IAAIC,KAAK,GAAG,OAAZ;EAEAD,UAAU,CAACE,IAAX,eACI;IAAA,wBACI;MACI,KAAK,EAAE;QAAED,KAAK,EAAEJ,IAAI,IAAI,CAAR,GAAY,KAAZ,GAAoB;MAA7B,CADX;MAEI,OAAO,EAAEM,CAAC,IAAIJ,YAAY,CAAC,CAAD,CAF9B;MAAA,gBAEqC,CAFrC;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAKKF,IAAI,GAAG,CAAP,GAAW,CAAX,iBAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALrB;EAAA,gBADJ;EAUA,IAAIO,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUV,KAAK,GAAGE,QAAlB,CAApB;;EACA,KAAK,IAAIS,CAAC,GAAGV,IAAI,GAAG,CAApB,EAAuBU,CAAC,GAAGH,aAA3B,EAA0CG,CAAC,EAA3C,EAA+C;IAC3C,IAAIA,CAAC,GAAG,CAAR,EAAW;MACP;IACH;;IACD,IAAIN,KAAK,GAAG,OAAZ;;IACA,IAAIM,CAAC,GAAG,CAAJ,KAAUV,IAAd,EAAoB;MAChBI,KAAK,GAAG,KAAR;IACH;;IACD,IAAIM,CAAC,GAAGV,IAAI,GAAG,CAAf,EAAkB;MACdG,UAAU,CAACE,IAAX,eACI;QACI,KAAK,EAAE;UAAED,KAAK,EAAEA;QAAT,CADX;QAEI,OAAO,EAAEE,CAAC,IAAIJ,YAAY,CAACQ,CAAC,GAAG,CAAL,CAF9B;QAAA,gBAEyCA,CAAC,GAAG,CAF7C;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAMH;EACJ;;EAGD,IAAIH,aAAa,GAAGJ,UAAU,CAACQ,MAA3B,IAAqCX,IAAI,GAAG,CAAP,IAAYO,aAArD,EAAoE;IAChE,IAAIH,KAAK,GAAG,OAAZ;;IACA,IAAIG,aAAa,KAAKP,IAAtB,EAA4B;MACxBI,KAAK,GAAG,KAAR;IACH;;IACDD,UAAU,CAACE,IAAX,eACI;MAAA,WACKL,IAAI,GAAG,CAAP,GAAWO,aAAX,iBAA4B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADjC,eAEI;QACI,KAAK,EAAE;UAAEH,KAAK,EAAEA;QAAT,CADX;QAEI,OAAO,EAAEE,CAAC,IAAIJ,YAAY,CAACK,aAAD,CAF9B;QAAA,gBAEiDA,aAFjD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA,gBADJ;EASH;;EAKD,oBACI;IAAA,UACKJ;EADL,iBADJ;AAKH;KA/DeN,kB"},"metadata":{},"sourceType":"module"}