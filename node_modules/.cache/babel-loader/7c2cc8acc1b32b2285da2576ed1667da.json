{"ast":null,"code":"var _jsxFileName = \"/home/leandro/Projects/react-app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { QueryClient, QueryClientProvider, useQuery } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport './App.css';\nimport { LoginForm } from './components/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nexport var useLogged = () => {\n  _s();\n\n  return useQuery([\"useLogged\"], {\n    isLogged: false,\n    setIsLogged: () => {}\n  });\n};\n\n_s(useLogged, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nfunction App() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [isLogged, setIsLogged] = useState(false);\n  useLogged = _s2(() => {\n    _s2();\n\n    return useQuery([\"useLogged\"], {\n      isLogged: isLogged,\n      setIsLogged: setIsLogged\n    });\n  }, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [useQuery];\n  });\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(App, \"89XCv14WuI+/w0kW0WRVdklgFH8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["QueryClient","QueryClientProvider","useQuery","useState","LoginForm","queryClient","useLogged","isLogged","setIsLogged","App"],"sources":["/home/leandro/Projects/react-app/src/App.js"],"sourcesContent":["import { QueryClient, QueryClientProvider, useQuery } from '@tanstack/react-query'\nimport { useState } from 'react';\nimport './App.css';\nimport { LoginForm } from './components/login'\n\nconst queryClient = new QueryClient()\n\nexport var useLogged = () => useQuery([\"useLogged\"], ({ isLogged: false, setIsLogged: () => { } }));\n\nfunction App() {\n\n  const [isLogged, setIsLogged] = useState(false)\n\n  useLogged = () => useQuery([\"useLogged\"], ({ isLogged: isLogged, setIsLogged: setIsLogged }))\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <LoginForm />\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,mBAAtB,EAA2CC,QAA3C,QAA2D,uBAA3D;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,MAAMC,WAAW,GAAG,IAAIL,WAAJ,EAApB;AAEA,OAAO,IAAIM,SAAS,GAAG;EAAA;;EAAA,OAAMJ,QAAQ,CAAC,CAAC,WAAD,CAAD,EAAiB;IAAEK,QAAQ,EAAE,KAAZ;IAAmBC,WAAW,EAAE,MAAM,CAAG;EAAzC,CAAjB,CAAd;AAAA,CAAhB;;GAAIF,S;UAAkBJ,Q;;;AAE7B,SAASO,GAAT,GAAe;EAAA;;EAAA;;EAEb,MAAM,CAACF,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;EAEAG,SAAS,OAAG;IAAA;;IAAA,OAAMJ,QAAQ,CAAC,CAAC,WAAD,CAAD,EAAiB;MAAEK,QAAQ,EAAEA,QAAZ;MAAsBC,WAAW,EAAEA;IAAnC,CAAjB,CAAd;EAAA,CAAH;IAAA,QAASN,QAAT;EAAA,EAAT;EAEA,oBACE,QAAC,mBAAD;IAAqB,MAAM,EAAEG,WAA7B;IAAA,uBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;IAXQI,G;;KAAAA,G;AAaT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}